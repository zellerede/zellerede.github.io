var search_data = {"index":{"searchIndex":["ama","drupal_clusting","fileutils","netting","object","stacks_json","utilities","attack()","check()","confirm()","create()","create_stack()","delete()","delete_stack()","die()","get()","get_default_network_ids()","help()","info()","list()","main()","methods_of()","new()","new()","post()","stack_status()","terminate()","test()","drupalcluster.conf","dr.sublime-project","dr.sublime-workspace","drupalcluster.gemspec","readme"],"longSearchIndex":["ama","drupal_clusting","fileutils","netting","object","stacks_json","utilities","drupal_clusting#attack()","drupal_clusting#check()","object#confirm()","drupal_clusting#create()","ama#create_stack()","drupal_clusting#delete()","ama#delete_stack()","object#die()","netting#get()","ama#get_default_network_ids()","drupal_clusting#help()","ama#info()","drupal_clusting#list()","object#main()","object#methods_of()","drupal_clusting::new()","netting::new()","netting#post()","ama#stack_status()","ama#terminate()","drupal_clusting#test()","","","","",""],"info":[["AMA","","AMA.html","",""],["Drupal_Clusting","","Drupal_Clusting.html","","<p>Public methods of this class are just the CLI commands. Its private methods\nare separated into modules. …\n"],["FileUtils","","FileUtils.html","",""],["Netting","","Netting.html","","<p>A wrapper around Net::HTTP::Post and Get methods.\n"],["Object","","Object.html","",""],["Stacks_json","","Stacks_json.html","","<p>This module is part of class Drupal_Clusting, handles the  stack_name =&gt;\nstack_url  connection by …\n"],["Utilities","","Utilities.html","","<p>This module contains further utility methods for Drupal_Clusting class\n"],["attack","Drupal_Clusting","Drupal_Clusting.html#method-i-attack","(instance_id)","<p>Terminate one of the Drupal servers, referred  by its instance_id.\n<p>The EC2 instance-id of the currently …\n"],["check","Drupal_Clusting","Drupal_Clusting.html#method-i-check","(stack_name=nil)","<p>Gives status about creation/deletion of the given cluster. Possible results\nare:\n\n<pre>ongoing,  created,  failed, ...</pre>\n"],["confirm","Object","Object.html#method-i-confirm","()","<p>Confirmation on STDIN\n"],["create","Drupal_Clusting","Drupal_Clusting.html#method-i-create","(stack_name)","<p>Creates a Drupal cluster. You have to give it a name as parameter, and then\na password for the DB admin. …\n"],["create_stack","AMA","AMA.html#method-i-create_stack","(conf)",""],["delete","Drupal_Clusting","Drupal_Clusting.html#method-i-delete","(stack_name)","<p>Deletes the given cluster after confirmation.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">drupalcluster</span> <span class=\"ruby-identifier\">delete</span> <span class=\"ruby-constant\">MySite</span>\n</pre>\n"],["delete_stack","AMA","AMA.html#method-i-delete_stack","(stack_name)",""],["die","Object","Object.html#method-i-die","(text=\"\")","<p>Displays the given <code>text</code>, if any, then quits.\n"],["get","Netting","Netting.html#method-i-get","(*stuff)","<p>Sends HTTP GET and returns the answer\n"],["get_default_network_ids","AMA","AMA.html#method-i-get_default_network_ids","()",""],["help","Drupal_Clusting","Drupal_Clusting.html#method-i-help","(cmd=nil)","<p>Describes the given command.\n"],["info","AMA","AMA.html#method-i-info","(stack_name)",""],["list","Drupal_Clusting","Drupal_Clusting.html#method-i-list","()","<p>Lists the previously created stacks and their URL&#39;s. Takes no\nparameters.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">drupalcluster</span> <span class=\"ruby-identifier\">list</span>\n</pre>\n"],["main","Object","Object.html#method-i-main","(executorCls)","<p>This is the main function of the CLI. Its parameter is an arbitrary class,\nwhose public instance methods …\n"],["methods_of","Object","Object.html#method-i-methods_of","(cls)","<p>Gives the set of all public instance methods of the given class.\n"],["new","Drupal_Clusting","Drupal_Clusting.html#method-c-new","()",""],["new","Netting","Netting.html#method-c-new","(url)","<p>A full URL has to be given, starting with http:, ending in the port (if\nport is not the default)\n"],["post","Netting","Netting.html#method-i-post","(*stuff)","<p>Sends HTTP POST, data as json\n"],["stack_status","AMA","AMA.html#method-i-stack_status","(stack_name)",""],["terminate","AMA","AMA.html#method-i-terminate","(instance_id)",""],["test","Drupal_Clusting","Drupal_Clusting.html#method-i-test","(stack=nil)","<p>Tests the given site by a simple HTTP GET /.  Either the cluster name or\nthe Drupal site&#39;s base  …\n"],["drupalcluster.conf","","conf/drupalcluster_conf.html","","<p>aws &mdash; # not in use yet region = eu-central-1\n<p>create &mdash; # template_url =\ns3.eu-central-1.amazonaws.com/drupalcluster/Drupal_in_VPC.yaml …\n"],["dr.sublime-project","","dr_sublime-project.html","","<p>{\n\n<pre>&quot;folders&quot;:\n[\n        {\n                &quot;path&quot;: &quot;.&quot;\n        }\n]</pre>\n<p>}\n"],["dr.sublime-workspace","","dr_sublime-workspace.html","","<p>{\n\n<pre>&quot;auto_complete&quot;:\n{\n        &quot;selected_items&quot;:\n        [\n                [\n                        &quot;rege&quot;, ...</pre>\n"],["drupalcluster.gemspec","","drupalcluster_gemspec.html","","<p>Gem::Specification.new do |s|\n\n<pre>s.name        = &#39;drupalcluster&#39;\ns.version     = &#39;0.1.1&#39;\ns.license     = ...</pre>\n"],["readme","","readme_md.html","","<p><code>drupalcluster</code> is a command line tool to quickly\ndeploy a\nDrupal hosting cluster of a scalable amount ...\n"]]}}